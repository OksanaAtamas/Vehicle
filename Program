using System;

// Базовий абстрактний клас транспортного засобу
public abstract class Vehicle
{
    private int numberOfWheels;
    private int numberOfDoors;
    private string make;
    private string model;

    public Vehicle(int numberOfWheels, int numberOfDoors, string make, string model)
    {
        this.numberOfWheels = numberOfWheels; //кількість коліс
        this.numberOfDoors = numberOfDoors; //кількість дверей
        this.make = make; //виробник
        this.model = model; //модель
    }

    public virtual void Drive()
    {
        Console.WriteLine("Driving..."); //їдемо
    }

    // Абстрактний метод, що буде реалізовано в похідних класах
    public abstract void Repair();

    // Захищений метод, що використовується в похідних класах
    protected void StartEngine()
    {
        Console.WriteLine("Engine started."); //двигун завівся
    }
}

// Клас, що наслідується від Vehicle
public class Car : Vehicle
{
    private bool hasSunroof;

    public Car(int numberOfWheels, int numberOfDoors, string make, string model, bool hasSunroof)
        : base(numberOfWheels, numberOfDoors, make, model)
    {
        this.hasSunroof = hasSunroof; //наявність люка
    }

    public override void Drive()
    {
        Console.WriteLine("Driving car..."); //їдемо на машині
    }

    public override void Repair()
    {
        Console.WriteLine("Repairing car..."); //ремонт машини
    }
}

// Клас, що наслідується від Vehicle
public class Motorcycle : Vehicle
{
    private int engineSize;

    public Motorcycle(int numberOfWheels, int numberOfDoors, string make, string model, int engineSize)
        : base(numberOfWheels, numberOfDoors, make, model)
    {
        this.engineSize = engineSize; //двигун
    }

    public override void Drive()
    {
        Console.WriteLine("Driving motorcycle..."); //їдемо на мото
    }

    public override void Repair()
    {
        Console.WriteLine("Repairing motorcycle..."); //ремонт на мото
    }
}


class Program
{
    static void Main(string[] args)
    {
        // Створення об'єктів класів
        Car car = new Car(4, 4, "Toyota", "Camry", true);
        Motorcycle motorcycle = new Motorcycle(2, 0, "Harley-Davidson", "Street Glide", 1800);

        // Виклик методів об'єктів
        car.Drive();
        motorcycle.Drive();

        car.Repair();
        motorcycle.Repair();
    }
}
